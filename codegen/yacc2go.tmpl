//package v40 

const (
	// Enums:
{{range .EnumVals}}	{{.Name}} = {{.Val}} // {{.OrigName}}
{{end}}
	// Consts:
{{range .Consts}}	{{.Name}} = {{.Val}} // {{.OrigName}}
{{end}}
)


{{range .Typedefs}}type {{.Name}} {{.Type}} // {{.OrigName}}
{{end}}


{{range .Enums}}type {{.Name}} {{.Type}} // {{.OrigName}}
{{end}}


{{range .Structs}}

type {{.Name}} struct { // {{.OrigName}}
{{range .Members}}	{{.Name}} {{.Type}}
{{end -}}
}
{{end}}


{{range .Unions}}

type {{.Name}} struct {
	{{.DiscriminantName}} {{.DiscriminantType}} `xdr:"union"`
{{range .Cases}}	{{if not .Name}}//{{end}}{{.Name}}  {{.Type}}  `xdr:"unioncase={{.DiscriminantVal}}"` // {{.CaseName}}
{{end -}}
}
{{end}}


{{range .ArgFunc}}

func {{.Name}} ({{.Args}}) (NfsArgop4) {
	return NfsArgop4{Argop:{{.OpNum}}{{if .Op}}, {{.Op}}:{{.Type}}{ {{.Init}} }{{end}} }
}
{{end}}

